server.port=8080

spring.application.name=project

#DataSource \u00ec\u0084\u00a4\u00ec\u00a0\u0095
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://cproject-01.cpeeo4ys4rdt.ap-northeast-2.rds.amazonaws.com:3306/cproject?rewriteBatchedStatements=true&useUnicode=true&characterEncoding=utf8&allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=mysql12345
# spring.datasource.url=jdbc:mysql://localhost:3306/cproject?useUnicode=true&characterEncoding=utf8&allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
# spring.datasource.username=root
# spring.datasource.password=mysql

# spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration


#Multipart
spring.servlet.multipart.max-file-size=100MB
# => \u00ec\u009a\u0094\u00ec\u00b2\u00ad \u00eb\u00b0\u009b\u00ec\u009d\u0084 \u00ec\u0088\u0098 \u00ec\u009e\u0088\u00eb\u008a\u0094 \u00ed\u008c\u008c\u00ec\u009d\u00bc\u00ec\u009d\u0098 \u00ec\u00b5\u009c\u00eb\u008c\u0080 \u00ec\u0082\u00ac\u00ec\u009d\u00b4\u00ec\u00a6\u0088
spring.servlet.multipart.max-request-size=100MB
# => \u00ec\u009a\u0094\u00ec\u00b2\u00ad \u00eb\u00b0\u009b\u00ec\u009d\u0084 \u00ec\u0088\u0098 \u00ec\u009e\u0088\u00eb\u008a\u0094 \u00eb\u008d\u00b0\u00ec\u009d\u00b4\u00ed\u0084\u00b0 \u00ec\u00a0\u0084\u00ec\u00b2\u00b4\u00ec\u009d\u0098 \u00ec\u00b5\u009c\u00eb\u008c\u0080 \u00ec\u0082\u00ac\u00ec\u009d\u00b4\u00ec\u00a6\u0088

# ** hibernate 설정 **
#spring.jpa.hibernate.ddl-auto=update
# => 프로젝트 실행시 자동 DDL 생성할것인지 결정여부
#   - create: 매번 Table을 새로 생성
#   - update: 존재하지 않으면 Create, 변경 사항이 있으면 Alter로 자동변경
#   - create-drop: 프로그램 시작시 create 하고 종료 시 drop
#   - validate: 테이블 내용이 변경되면 변경 내용을 출력하고 프로그램 종료  
# => 팀 프로젝트 개발환경 에서는 
#   - 다양한 제약 조건들을 사용하게 되고, DDL은 직접 관리하는것이 바람직함 
#   - JPA 가 자동으로 제어하게되면 의도하지 않은 변경이 발생하게되어 관리가 어려움.

spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true
# => hibernate \u00ea\u00b0\u0080 \u00eb\u00a7\u008c\u00eb\u0093\u009c\u00eb\u008a\u0094 SQL\u00ea\u00b5\u00ac\u00eb\u00ac\u00b8\u00ec\u009d\u0084 \u00ec\u00bd\u0098\u00ec\u0086\u0094\u00ec\u0097\u0090 formatting(\u00ea\u00b0\u0080\u00eb\u008f\u0085\u00ec\u0084\u00b1\u00ec\u00a2\u008b\u00ea\u00b2\u008c \u00ec\u00a4\u0084\u00eb\u00b0\u0094\u00ea\u00bf\u0088)\u00ed\u0095\u0098\u00ec\u0097\u00ac \u00eb\u00b3\u00b4\u00ec\u0097\u00ac\u00ec\u00a4\u008c

# Logging Setting
logging.level.org.hibernate=info



